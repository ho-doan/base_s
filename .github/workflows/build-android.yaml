name: build android

on:
  workflow_dispatch:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+.dev"

jobs:
  DEV:
    runs-on: ubuntu-20.04
    environment: DEV
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      # https://github.com/actions/checkout
      - name: checkout
        uses: actions/checkout@v4

      - name: Tag name
        id: tag_name
        run: |
          echo "SOURCE_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
          echo "SOURCE_BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
          echo "SOURCE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: get version build flutter
        env:
          SOURCE_TAG: ${{ steps.tag_name.outputs.SOURCE_TAG }}
          FLUTTER_VERSION: ${{vars.FLUTTER_VERSION}}
        id: version_flutter
        run: |
          VDEV=${SOURCE_TAG#v}
          echo "ff: ${{env.FLUTTER_VERSION}} ${{vars.FLUTTER_VERSION}}"
          echo "VERSION=${VDEV/.dev/}" >> $GITHUB_OUTPUT

      #set up java 17
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "temurin"

      # https://github.com/kuhnroyal/flutter-fvm-config-action
      # - name: fetch flutter config
      #   uses: kuhnroyal/flutter-fvm-config-action@v1

      # https://github.com/subosito/flutter-action
      - name: set up flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ vars.FLUTTER_VERSION }}
          channel: ${{ vars.FLUTTER_CHANNEL }}
          cache: true
          cache-key: ${{ vars.FLUTTER_VERSION }}-${{ vars.FLUTTER_CHANNEL }}

      # - uses: ruby/setup-ruby@v1
      #   with:
      #     ruby-version: 3.0.0

      # - name: setup fastlane
      #   run: |
      #     gem install bundler
      #     bundle install --gemfile=.github/fastlane/Gemfile

      # https://github.com/actions/cache ${{ vars.PUB_CACHE }}
      - name: cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            /opt/hostedtoolcache/flutter
            ${{ github.workspace }}/template/.packages
            ${{ github.workspace }}/template/.flutter-plugins
            ${{ github.workspace }}/template/.flutter-plugin-dependencies
            ${{ github.workspace }}/template/.dart_tool/package_config.json
          key: build-pubspec-${{ hashFiles(format('{0}{1}', github.workspace, '/template/pubspec.lock')) }}
          restore-keys: |
            build-pubspec-

      - name: setup dart
        uses: dart-lang/setup-dart@v1

      - name: setup melos
        uses: bluefireteam/melos-action@v2

      - name: install dependencies
        run: melos pub

      - name: build code gen shared
        run: melos shared
      - name: build code gen
        run: melos build-all

      - name: install template
        run: melos pub

      # --build-number 69
      - name: build apk
        working-directory: ./template
        run: flutter build apk --release --flavor dev -t lib/main_dev.dart --build-name=${{steps.version_flutter.outputs.VERSION}}

      - name: upload artifact apk
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: ./template/build/app/outputs/flutter-apk/app-dev-release.apk


      - name: cache gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: build aab
        working-directory: ./template
        run: |
          flutter build appbundle \
          	--release \
            --flavor dev \
            -t lib/main_dev.dart

      - name: upload artifact aab
        uses: actions/upload-artifact@v4
        with:
          name: release-aab
          path: ./template/build/app/outputs/bundle/devRelease/app-dev-release.aab

      # - name: Create the Keystore
      #   run: echo -n "$ANDROID_KEY_STORE_BASE_64" | grep -v '^-' | tr -d '\n' | base64 -d > $RUNNER_TEMP/temp.keystore
      #   env:
      #     ANDROID_KEY_STORE_BASE_64: ${{ secrets.ANDROID_KEY_STORE_BASE_64 }}

      # - name: Sign Android App Bundle
      #   run: |
      #     jarsigner -keystore $RUNNER_TEMP/temp.keystore \
      #       -storepass $ANDROID_STORE_PASSWORD \
      #       -keypass $ANDROID_KEY_PASSWORD \
      #       -sigalg SHA256withRSA \
      #       -digestalg SHA-256 \
      #       -signedjar ./build/app/outputs/bundle/release/app-release-signed.aab ./build/app/outputs/bundle/release/*.aab $ANDROID_KEY_ALIAS
      #   env:
      #     ANDROID_STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}
      #     ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      #     ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      # - name: save signed aab to artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: app-release-signed.aab
      #     path: ./build/app/outputs/bundle/release/app-release-signed.aab

      # - name: Create service-accont.json
      #   run: echo -n ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_KEY_JSON }} | base64 -d > android/service-account.json

      # - name: deploy to googleplay
      #   run: fastlane deploy_to_google_play_$APP_FLAVOR
      #   working-directory: ./android
      #   env:
      #     APP_FLAVOR: ${{ secrets.APP_FLAVOR }}
