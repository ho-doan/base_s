# name: ios deploy to testflight

# on:
#   workflow_dispatch:
#     inputs:
#       environment:
#         type: environment
#         description: 'Environment'
#         required: true

# jobs:
#   build_and_deploy:
#     runs-on: macos-13

#     environment: ${{ github.event.inputs.environment }}
    
#     steps:
#       # https://github.com/actions/checkout
#       - name: checkout
#         uses: actions/checkout@v3

#       # https://github.com/kuhnroyal/flutter-fvm-config-action
#       - name: fetch flutter config
#         uses: kuhnroyal/flutter-fvm-config-action@v1

#       - name: setup xcode
#         uses: maxim-lobanov/setup-xcode@v1
#         with:
#           xcode-version: '15.1.0'

#       # https://github.com/actions/cache
#       - name: cache dependencies
#         uses: actions/cache@v3
#         with:
#           path: |
#             ${{ env.PUB_CACHE }}
#             ${{ github.workspace }}/.packages
#             ${{ github.workspace }}/.flutter-plugins
#             ${{ github.workspace }}/.flutter-plugin-dependencies
#             ${{ github.workspace }}/.dart_tool/package_config.json
#           key: build-pubspec-${{ hashFiles(format('{0}{1}', github.workspace, '/pubspec.lock')) }}
#           restore-keys: |
#             build-pubspec-
      
#       # https://github.com/actions/cache
#       - name: cache gems
#         uses: actions/cache@v2
#         with:
#           path: .github/fastlane/vendor/bundle
#           key: ${{ runner.os }}-gem-bundler-${{ hashFiles('**/Gemfile.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-gem-bundler-
      
#       # https://github.com/actions/cache
#       - name: cache pods
#         uses: actions/cache@v2
#         with:
#           path: ios/Pods
#           key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-pods-
      
#       # https://github.com/subosito/flutter-action
#       - name: set up flutter
#         uses: subosito/flutter-action@v2
#         with:
#           flutter-version: ${{ env.FLUTTER_VERSION }}
#           channel: ${{ env.FLUTTER_CHANNEL }}
#           cache: true
#           cache-key: ${{ env.FLUTTER_VERSION }}-${{ env.FLUTTER_CHANNEL }}
      
#       - name: setup fastlane
#         run: bundle install --gemfile=.github/fastlane/Gemfile

#       - name: fastlane match
#         run: |
#           export MATCH_GIT_BASIC_AUTHORIZATION=$(echo -n "$MATCH_GITHUB_USER:$MATCH_GITHUB_TOKEN" | base64)
#           bundle exec fastlane codesign_$APP_FLAVOR
#         working-directory: ./ios
#         env:
#           APP_FLAVOR: ${{ secrets.APP_FLAVOR }}
#           MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
#           MATCH_GITHUB_USER: ${{ secrets.MATCH_GITHUB_USER }}
#           MATCH_GITHUB_TOKEN: ${{ secrets.MATCH_GITHUB_TOKEN }}

#       - name: make ExportOptions.plist
#         run: fastlane make_export_options_plist
#         working-directory: ./ios
#         env:
#           APP_ID_SUFFIX: ${{ secrets.APP_ID_SUFFIX }}

#       - name: build ipa
#         run: |
#           flutter build ipa \
#             --dart-define=APP_FLAVOR=$APP_FLAVOR \
#             --dart-define=APP_NAME=$APP_NAME \
#             --dart-define=APP_ID_SUFFIX=$APP_ID_SUFFIX  \
#             --export-options-plist=./ExportOptions.plist
#         env:
#           APP_FLAVOR: ${{ secrets.APP_FLAVOR }}
#           APP_ID_SUFFIX: ${{ secrets.APP_ID_SUFFIX }}
#           APP_NAME: ${{ secrets.APP_NAME }}
      
#       - name: deploy to testflight
#         run: fastlane deploy_to_testflight_$APP_FLAVOR
#         working-directory: ./ios
#         env:
#           APP_FLAVOR: ${{ secrets.APP_FLAVOR }}
#           KEY_ID: ${{ secrets.KEY_ID }}
#           ISSUER_ID: ${{ secrets.ISSUER_ID }}
#           P8: ${{ secrets.P8 }}
