name: app

command:
  bootstrap:
    usePubspecOverrides: true

packages:
  - template/**
  - common/**
  - domain/**
  - shared/**
  - mocks/**
  - packages/**
  - packages/core_generator/**
  - packages/command/**
  - '*'

scripts:
  analyze:
    exec: dart analyze .
    failFast: true
    description: analyze all modules.
  pub:
    exec: flutter pub get
    failFast: true
    description: pub get all modules.
  d_pub:
    exec: dart pub get
    failFast: true
    description: pub get all modules.
  test:
    exec: flutter test
    failFast: true
    packageFilters:
      dirExists: test
    description: test all modules.
  test_c_c:
    exec: flutter test --coverage && genhtml coverage/lcov.info -o coverage/html && open -a 'google chrome' ./coverage/html/index.html
    failFast: true
    packageFilters:
      dirExists: test
    description: test all modules.
  test_c:
    exec: flutter test --coverage && genhtml coverage/lcov.info -o coverage/html
    failFast: true
    packageFilters:
      dirExists: test
    description: test all modules.
  test_run:
    run: melos exec --dir-exists="test" --fail-fast -- flutter test --no-pub --coverage
    failFast: true
    concurrency: 1
    description: test all modules.
  integration:
    packageFilters:
      # --scope="*template*"
      scope: "*template*"
    exec: flutter test integration_test --flavor dev
    failFast: true
    
    description: test all modules.
  build:
    exec: dart pub run build_runner build --delete-conflicting-outputs
    failFast: true
    packageFilters:
      dependsOn: build_runner
    description: build_runner build all modules.
  domain:
    exec: flutter pub run build_runner build --delete-conflicting-outputs
    failFast: true
    packageFilters:
      scope: "*domain*"
      dependsOn: build_runner
    description: build_runner build all modules.
  mock:
    exec: dart bin/main.dart
    failFast: true
    packageFilters:
      scope: "*mocks*"
    description: build_runner build all modules.
  template:
    exec: flutter pub run build_runner build --delete-conflicting-outputs
    failFast: true
    packageFilters:
      scope: "*template*"
      dependsOn: build_runner
    description: build_runner build all modules.